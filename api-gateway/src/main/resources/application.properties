spring.application.name=api-gateway
server.port=9000

# KEYCLOAK Realm, JWT Issuer
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/moments-event-platform
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/moments-event-platform/protocol/openid-connect/certs

# EUREKA Naming Server
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# SWAGGER UI
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.urls[0].name=Moment Service
springdoc.swagger-ui.urls[0].url=/aggregate/moment-service/v3/api-docs
springdoc.swagger-ui.urls[1].name=Order Service
springdoc.swagger-ui.urls[1].url=/aggregate/order-service/v3/api-docs
springdoc.swagger-ui.urls[2].name=Customer Service
springdoc.swagger-ui.urls[2].url=/aggregate/customer-service/v3/api-docs
#springdoc.api-docs.path=/api-docs

# Actuator Endpoints
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#
# Resilience4j Properties
#
# Registers circuit breaker status in the Actuator health endpoint
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
#
# Uses a count-based window (vs. time-based) to track call outcomes
resilience4j.circuitbreaker.configs.default.sliding-window-type=COUNT_BASED
#
# Sets the size of the sliding window to 10 calls
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
#
# if 50% of the calls fail, the circuit breaker will open
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
# after 5 calls, if 50% of the calls fail, the circuit breaker will open
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5
#
# after 5s moves from open to half-open state allowing 3 calls to pass through
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
#
# allow 3 calls total, if failure threshold reached move from half-open back to open state, else to closed state
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=3
#
# Resilience4j Timeout Properties
resilience4j.timelimiter.configs.default.timeout-duration=3s
#
# Resilience4j Retry Properties:
# A call with all 3 attempts failing counts as a single failure for the circuit breaker
# A call that succeeds on retry attempt 2 or 3 counts as a success
# The timeout property (3s) applies to each individual attempt
#
# Allows 3 total attempts (1 initial + 2 retries)
resilience4j.retry.configs.default.max-attempts=3
# Wait 2 seconds between attempts
resilience4j.retry.configs.default.wait-duration=2s