# app
spring.application.name=order-service
server.port=8082

# EUREKA Naming Server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Security
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/moments-event-platform

# datasource
spring.datasource.url=jdbc:mysql://localhost:3308/order_service_db
spring.datasource.username=root
spring.datasource.password=mysql

# doing migrations through flyway, so turn off
spring.jpa.hibernate.ddl-auto=none

# Enable SQL logging
# spring.jpa.show-sql=true
# Format SQL logs for better readability
# spring.jpa.properties.hibernate.format_sql=true

# swagger/openapi
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# logging
# Set the root logging level (e.g., DEBUG, INFO, WARN, ERROR)
logging.level.root=INFO
# Set logging level for a specific package
logging.level.io.github.teamomo.order=DEBUG
# Configure the logging output to a file
#logging.file.name=logs/application.log


#Logging Levels (in order of verbosity):
#TRACE: Most detailed logging.
#DEBUG: Debugging information.
#INFO: General informational messages.
#WARN: Warnings about potential issues.
#ERROR: Errors that need attention.
#OFF: Disables logging.


# define url to back-end service
backend-service.url=http://localhost:8081

## Actuator Endpoints
#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.moment.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.moment.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.moment.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.moment.slidingWindowSize=5
resilience4j.circuitbreaker.instances.moment.failureRateThreshold=50
resilience4j.circuitbreaker.instances.moment.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.moment.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.moment.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.moment.minimum-number-of-calls=5

resilience4j.circuitbreaker.instances.customer.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.customer.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.customer.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.customer.slidingWindowSize=5
resilience4j.circuitbreaker.instances.customer.failureRateThreshold=50
resilience4j.circuitbreaker.instances.customer.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.customer.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.customer.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.customer.minimum-number-of-calls=5

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.moment.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.moment.max-attempts=3
resilience4j.retry.instances.moment.wait-duration=5s

#Kafka Properties
# provide list of kafka servers in cluster
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=order-placed
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://localhost:8085